/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package distensproject.view;

import distensproject.helper.Separator;
import distensproject.model.Dispensed;
import distensproject.model.Recipe;
import java.util.Calendar;
import javax.swing.JOptionPane;
public class Report3 extends javax.swing.JFrame {
    
    String MOUTH[];
    Recipe currentRecipe;
    Dispensed currentDispensed;
    String currentMouth, dispensedMouth, currentDispensedMouth, lineStr;
    Calendar calendar = Calendar.getInstance(), currentCalendar = Calendar.getInstance();
    int conteo;
    boolean counted;
    
    public Report3() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        MOUTH =  new String[]{"Enero", "Febrero", 
            "Marzo", "Abril", "Mayo", "Junio", "Julio",
            "Agosto", "Septiembre", "Octubre", 
            "Noviembre", "Diciembre"};
        conteoTxtA.setEditable(false);
        generateRecipesItems();
        generateMouthItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbMouth = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbRecipe = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        conteoTxtA = new javax.swing.JTextArea();
        generateReportBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbMouth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mes");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Receta");

        cbRecipe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));

        conteoTxtA.setColumns(20);
        conteoTxtA.setRows(5);
        jScrollPane1.setViewportView(conteoTxtA);

        generateReportBtn.setText("Generar reporte");
        generateReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateReportBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancelar");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbMouth, 0, 152, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbRecipe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(generateReportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMouth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRecipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn)
                    .addComponent(generateReportBtn))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.dispose();
        Reports reports = new Reports();
        reports.setVisible(true);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void generateReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateReportBtnActionPerformed
        conteoTxtA.setText("");
        conteo=0;
        counted = false;
        currentRecipe = getSelectedRecipe();
        currentMouth = getSelectedMouth();
        if(currentRecipe!=null){
            currentDispensed = getDispensed();
            if(currentDispensed!=null){
                calendar.setTime(currentDispensed.getCurrentDate());
                dispensedMouth = MOUTH[calendar.get(Calendar.MONTH)];
                for(Dispensed dispensed: Dispenser.dispensedList){
                    if(dispensed!=null){
                        currentCalendar.setTime(dispensed.getCurrentDate());
                        currentDispensedMouth = MOUTH[currentCalendar.get(Calendar.MONTH)];
                        if(dispensedMouth.equals(currentDispensedMouth)){
                            if(currentDispensed.getRecipe()==dispensed.getRecipe()){
                                conteo++;
                                counted = true;
                            }
                        }
                    }
                }
                if(counted){
                    lineStr = "Receta: " + currentDispensed.getRecipe().getName()+ "\n"+
                        "Mes: "+currentMouth + "\n"+
                        "Veces dispensada: " +conteo + "\n";   
                     conteoTxtA.setText(lineStr);
                }else{
                    JOptionPane.showMessageDialog(this, "No hay registro de que la receta "+currentRecipe.getName()
                            +" haya sido dispensada en este mes", "Error",
                            JOptionPane.ERROR_MESSAGE);
                }  
            }
        }
    }//GEN-LAST:event_generateReportBtnActionPerformed
    
    private void generateRecipesItems(){
        for(Recipe recipe: Separator.recipes){
            if(recipe!=null){
                cbRecipe.addItem(recipe.getName());
            }
        }
    }
    
    private Dispensed getDispensed(){
        for(Dispensed dispensed: Dispenser.dispensedList){
            if(dispensed!=null){
                if(dispensed.getRecipe()==currentRecipe){
                    return dispensed;
                }
            }
        }
        return null;
    }
    
    private String getSelectedMouth(){
        for(String mouth: MOUTH){
            if(mouth!=null){
                if(mouth.equals(cbMouth.getSelectedItem())){
                    return mouth;
                }
            }
        }
        return null;
    }
    
    private void generateMouthItems(){
        for(String mouth: MOUTH){
            if(mouth!=null){
                cbMouth.addItem(mouth);
            }
        }
    }
    
    private Recipe getSelectedRecipe(){
        for(Recipe recipe: Separator.recipes){
            if(recipe!=null){
                if(recipe.getName().equals(cbRecipe.getSelectedItem())){
                    return recipe;
                }
            }
        }
        return null;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Report3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox<String> cbMouth;
    private javax.swing.JComboBox<String> cbRecipe;
    private javax.swing.JTextArea conteoTxtA;
    private javax.swing.JButton generateReportBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
